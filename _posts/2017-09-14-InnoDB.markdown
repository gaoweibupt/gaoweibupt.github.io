---
lyout:      post
title:      "InnoDB"
subtitle:   "InnoDB学习笔记"
date:       2017-09-14 16:14:00
author:     "galway"
header-img: "img/home-bg-o.jpg"
catalog:  ture
tags:
    - sql
    - 数据库
    - InnoDB
---



## 表

### 存储结构
InnoDB引擎中所有数据都被逻辑地存放在表空间中，表空间由段(segment)、区(extent)、页(page)组成。

#### 表空间
表空间有两种:共享表空间和独立表空间, 由innodb_file_per_table参数来确定是否开启独立表空间。

* 独立表空间只存放数据、索引和插入缓冲页Bitmap页，可以实现单表在不同数据库中的移动，但是独立表空间大小不能自适应扩展。
* 共享表空间的大小可以自适应扩展，但是当表删除操作较多时空间会出现大量空隙

#### 段
InnoDB引擎中段的管理是由引擎来完成的，常见的段有数据段、索引段、回滚段等。
数据段为B+树的叶子节点；
索引段为B+树的非索引节点；

#### 区
区由连续的64个页组成，每个页默认大小16KB，因此每个区大小为1MB。页的大小可以变动，但是区的大小始终为1MB。
是先使用32个碎片页，然后再进行区的申请

#### 页
页是InnoDB磁盘管理的最小单位。常见的页类型有:

* 数据页(B-tree Node)
* undo页(undo Log Page)
* 系统页(System Page)
* 事务数据页(Transaction systemn Page)
* 插入缓冲位图页(Insert Buffer Bitmap)
* 插入缓冲空闲列表页(Insert Buffer Free List)
* 未压缩的二进制大对象页(Uncompressed BLOB Page)
* 压缩的二进制大对象页(compressed BLOB Page)

B+树索引并不能找到一条具体的记录，能找到的只是记录所在的页。然后将页加载到内存，进行二分查找。

#### 行
InnoDB存储引擎是面向列的，数据是按行存储的。每个页最多允许存放16KB/2-200行记录。
行记录有下面的格式:

* Compact: 一个页中存放的数据越多，其性能越高
* Redundant: CHAR类型NULL会占用较多空间
* Compressed和Dynamic: 对于行溢出存储的数据进行了压缩

### 约束

#### 数据完整性
数据完整性有以下三种形式：

* 实体完整性保证表中只有一个主键
* 域完整性保证数据每列的值满足特定的条件
* 参照完整性保证两张表之间的关系

对于InnoDB，提供了以下几种约束：
* Primary Key
* Unique Key
* Foreign Key
* Default
* NOT NULL

#### 触发器约束
触发器的作用是在执行INSERT、DELETE、UPDATE命令之前或之后自动调用SQL命令或存储过程
不建议用触发器,触发器对表的每一行都会处理一个事务;业务也不容易跟踪

#### 外键约束

### 视图
视图中的存储没有实际的物理存储

### 分区表
可以通过分区提高MYSQL的执行效率，但是有时会适得其反。这跟数据库的应用类型有关系，数据库主要有两种应用：
* OLTP，在线事务处理
* OLAP，在线分析处理

对于OLAP分区可以提高查询性能，而OLTP需要小心应用

